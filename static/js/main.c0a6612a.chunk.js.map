{"version":3,"sources":["images/logo.png","screens/Preloader/Preloader.js","screens/HomeScreen/components/Title.js","screens/HomeScreen/components/Alphabet.js","screens/HomeScreen/components/List.js","components/Spinner.js","screens/HomeScreen/components/RandomButton.js","screens/HomeScreen/HomeScreen.js","screens/ListScreen/ListScreen.js","components/Idiom.js","screens/IdiomOnLetterScreen/IdiomOnLetterScreen.js","screens/IdiomScreen/IdiomScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Preloader","showPreloader","localStorage","isPageLoaded","setTimeout","undefined","window","location","reload","className","style","backgroundImage","logo","Title","to","exact","activeClassName","fullAlphabet","Alphabet","history","useState","alphabet","setAlphabet","useEffect","timer","setInterval","length","clearInterval","map","letter","List","Spinner","RandomButton","animate","setAnimate","onClick","time","Math","round","random","push","floor","idioms","randomIdiom","idiom","generateIdiom","HomeScreen","ListScreen","Idiom","meaning","example","IdiomOnLetterScreen","match","params","filteredIdioms","filter","IdiomScreen","name","find","replace","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0a6612a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.315ace56.png\";","import React from \"react\";\r\nimport logo from \"../../images/logo.png\";\r\n\r\nconst Preloader = () => {\r\n  const showPreloader = localStorage.isPageLoaded ? false : true;\r\n\r\n  setTimeout(() => {\r\n    if (localStorage.isPageLoaded === undefined) {\r\n      localStorage.isPageLoaded = true;\r\n      window.location.reload();\r\n    }\r\n  }, 5000);\r\n\r\n  if (showPreloader) {\r\n    return (\r\n      <div className=\"Preloader\">\r\n        <div className=\"logo\" style={{ backgroundImage: `url(${logo}) ` }} />\r\n        <div className=\"progress\">\r\n          <div className=\"bar\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Title = () => (\r\n  <h1 className=\"title\">\r\n    <NavLink to=\"/\" exact activeClassName=\"active\">\r\n      Idioms\r\n    </NavLink>\r\n  </h1>\r\n);\r\n\r\nexport default Title;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst fullAlphabet = [\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n  \"H\",\r\n  \"I\",\r\n  \"J\",\r\n  \"K\",\r\n  \"L\",\r\n  \"M\",\r\n  \"N\",\r\n  \"O\",\r\n  \"P\",\r\n  \"Q\",\r\n  \"R\",\r\n  \"S\",\r\n  \"T\",\r\n  \"U\",\r\n  \"V\",\r\n  \"W\",\r\n  \"X\",\r\n  \"Y\",\r\n  \"Z\",\r\n];\r\n\r\nconst Alphabet = ({ history }) => {\r\n  const [alphabet, setAlphabet] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (alphabet.length < fullAlphabet.length) {\r\n        setAlphabet([...alphabet, fullAlphabet[alphabet.length]]);\r\n      }\r\n    }, 250);\r\n    return () => clearInterval(timer);\r\n  }, [alphabet]);\r\n\r\n  return (\r\n    <div className=\"alphabet\">\r\n      {alphabet.map((letter) => (\r\n        <div className=\"box\" key={letter}>\r\n          <NavLink\r\n            to={`/idiom-on-letter/${letter}`}\r\n            className=\"letter\"\r\n            activeClassName=\"active\"\r\n          >\r\n            {letter}\r\n          </NavLink>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst List = () => (\r\n  <div className=\"list\">\r\n    <NavLink to={\"/list\"} exact activeClassName=\"active\">\r\n      List of all idioms\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => (\r\n  <div className=\"spinner\">\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\n\r\nimport idioms from \"../../../data/idioms.json\";\r\n\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst RandomButton = ({ history }) => {\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  function generateIdiom() {\r\n    setAnimate(true);\r\n    const time = 500 + 250 * Math.round(Math.random() * 4);\r\n    history.push(\"/\");\r\n    setTimeout(() => {\r\n      const random = Math.floor(Math.random() * idioms.length);\r\n      const randomIdiom = idioms[random];\r\n\r\n      history.push(`/idiom/${randomIdiom.idiom}`);\r\n      setAnimate(false);\r\n    }, time);\r\n  }\r\n\r\n  return animate ? (\r\n    <Spinner />\r\n  ) : (\r\n    <button className=\"random-Button\" onClick={() => generateIdiom()}>\r\n      Get a Random Idiom\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RandomButton;\r\n","import React from \"react\";\r\n\r\nimport Title from \"./components/Title\";\r\nimport Alphabet from \"./components/Alphabet\";\r\nimport List from \"./components/List\";\r\nimport RandomButton from \"./components/RandomButton\";\r\n\r\nconst HomeScreen = ({ history }) => (\r\n  <div className=\"HomeScreen\">\r\n    <Title />\r\n    <Alphabet history={history} />\r\n    <List />\r\n    <RandomButton history={history} />\r\n  </div>\r\n);\r\n\r\nexport default HomeScreen;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport idioms from \"../../data/idioms.json\";\r\n\r\nconst ListScreen = () => {\r\n  return (\r\n    <div className=\"ListScreen\">\r\n      {idioms.map((idiom) => (\r\n        <div className=\"idiom\" key={idiom.idiom}>\r\n          <Link to={`idiom/${idiom.idiom}`}>{idiom.idiom}</Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListScreen;\r\n","import React from \"react\";\r\n\r\nconst Idiom = ({ idiom }) => (\r\n  <div className=\"Idiom\">\r\n    <div className=\"name\">{idiom.idiom}</div>\r\n    <div className=\"meaning\">{idiom.meaning}</div>\r\n    <div className=\"example\">{idiom.example}</div>\r\n  </div>\r\n);\r\n\r\nexport default Idiom;\r\n","import React from \"react\";\r\n\r\nimport Idiom from \"../../components/Idiom\";\r\n\r\nimport idioms from \"../../data/idioms.json\";\r\n\r\nconst IdiomOnLetterScreen = ({ match }) => {\r\n  const { letter } = match.params;\r\n\r\n  const filteredIdioms = idioms.filter((idiom) => idiom.idiom[0] === letter);\r\n\r\n  return (\r\n    <div className=\"IdiomOnLetterScreen\">\r\n      {filteredIdioms.map((idiom) => (\r\n        <Idiom key={idiom.idiom} idiom={idiom} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IdiomOnLetterScreen;\r\n","import React from \"react\";\r\n\r\nimport Idiom from \"../../components/Idiom\";\r\n\r\nimport idioms from \"../../data/idioms.json\";\r\n\r\nconst IdiomScreen = ({ match }) => {\r\n  const name = match.params.name;\r\n\r\n  // I need to replace ? with an empty space in order to avoid mistakes\r\n  const idiom = idioms.find((idiom) => idiom.idiom.replace(\"?\", \"\") === name);\r\n\r\n  return (\r\n    <div className=\"IdiomScreen\">\r\n      <Idiom idiom={idiom} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IdiomScreen;\r\n","import React from \"react\";\r\n\r\nimport Preloader from \"./screens/Preloader/Preloader\";\r\nimport HomeScreen from \"./screens/HomeScreen/HomeScreen\";\r\nimport ListScreen from \"./screens/ListScreen/ListScreen\";\r\nimport IdiomOnLetterScreen from \"./screens/IdiomOnLetterScreen/IdiomOnLetterScreen\";\r\nimport IdiomScreen from \"./screens/IdiomScreen/IdiomScreen\";\r\n\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport \"./scss/main.css\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <Router>\r\n      <Route path=\"/\" component={Preloader} />\r\n      <Route path=\"/\" component={HomeScreen} />\r\n      <Route path=\"/list\" exact component={ListScreen} />\r\n      <Route\r\n        path=\"/idiom-on-letter/:letter\"\r\n        exact\r\n        component={IdiomOnLetterScreen}\r\n      />\r\n      <Route path=\"/idiom/:name\" exact component={IdiomScreen} />\r\n    </Router>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}